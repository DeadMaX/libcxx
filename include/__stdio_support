// -*- C++ -*-
//===----------------------------------------------------------------------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is dual licensed under the MIT and the University of Illinois Open
// Source Licenses. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#ifndef _LIBCPP_STDIO_SUPPORT
#define _LIBCPP_STDIO_SUPPORT

#include <__config>

#ifndef _LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER
#pragma GCC system_header
#endif

#ifndef __libcpp_has_include
  #ifndef __has_include
    #define __libcpp_has_include(x) 0
  #else
    #define __libcpp_has_include(x) __has_include(x)
  #endif
#endif

#if defined(_LIBCPP_HAS_STDIO_API_EXTERNAL) && \
    __libcpp_has_include(<__external_stdio>)
#include <__external_stdio>
#else

#if defined(_LIBCPP_HAS_STDIO_API_EXTERNAL)
#define _LIBCPP_STDIO_ABI_VISIBILITY _LIBCPP_FUNC_VIS
#else
#define _LIBCPP_STDIO_ABI_VISIBILITY inline _LIBCPP_INLINE_VISIBILITY
#endif

#include <__string>

_LIBCPP_BEGIN_NAMESPACE_STD

class __libcpp_file_stream;

_LIBCPP_STDIO_ABI_VISIBILITY
__libcpp_file_stream __libcpp_get_standard_in_stream();

_LIBCPP_STDIO_ABI_VISIBILITY
__libcpp_file_stream __libcpp_get_standard_out_stream();

_LIBCPP_STDIO_ABI_VISIBILITY
__libcpp_file_stream __libcpp_get_standard_err_stream();

_LIBCPP_END_NAMESPACE_STD

#ifndef _LIBCXX_DISABLE_C_LINKAGE

#include <stdio.h>

_LIBCPP_BEGIN_NAMESPACE_STD

class __libcpp_file_stream
{
	FILE *__f;
public:
	__libcpp_file_stream(FILE *__f) : __f (__f) {}

	char __read_one();
	bool __unread_one(char);

};

__libcpp_file_stream __libcpp_get_standard_in_stream()
{
	return __libcpp_file_stream(stdin);
}

__libcpp_file_stream __libcpp_get_standard_out_stream()
{
	return __libcpp_file_stream(stdout);
}

__libcpp_file_stream __libcpp_get_standard_err_stream()
{
	return __libcpp_file_stream(stderr);
}

_LIBCPP_END_NAMESPACE_STD

#else

_LIBCPP_BEGIN_NAMESPACE_STD

class __libcpp_file_stream
{
public:
	char __read_one();
	bool __unread_one(char);

	size_t __write_many(const char *, size_t);
	bool __flush();
};

_LIBCPP_END_NAMESPACE_STD

#endif

#endif

#endif // _LIBCPP_STDIO_SUPPORT
