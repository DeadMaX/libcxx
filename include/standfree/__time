// -*- C++ -*-
//===------------------------- __time ----------------------------------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is dual licensed under the MIT and the University of Illinois Open
// Source Licenses. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
#pragma GCC system_header
#endif

#ifndef _LIBCPP__TIME
#define _LIBCPP__TIME

_LIBCPP_BEGIN_NAMESPACE_STANDFREE

struct tm final {
	int     tm_sec;         /* seconds after the minute [0-60] */
	int     tm_min;         /* minutes after the hour [0-59] */
	int     tm_hour;        /* hours since midnight [0-23] */
	int     tm_mday;        /* day of the month [1-31] */
	int     tm_mon;         /* months since January [0-11] */
	int     tm_year;        /* years since 1900 */
	int     tm_wday;        /* days since Sunday [0-6] */
	int     tm_yday;        /* days since January 1 [0-365] */
	int     tm_isdst;       /* Daylight Savings Time flag */
	long    tm_gmtoff;      /* offset from UTC in seconds */
	char    *tm_zone;       /* timezone abbreviation */
};

using clock_t = unsigned long long;

using time_t = unsigned long long;

clock_t clock();

double difftime( time_t time_end, time_t time_beg );

time_t mktime( tm* time );

time_t time( time_t* arg );

char* asctime( const tm* time_ptr );

char* ctime( const tm* time_ptr );

tm* gmtime( const time_t* time );

tm* localtime( const time_t *time );

std::size_t strftime( char* str, std::size_t count, const char* format, const tm* time );

_LIBCPP_END_NAMESPACE_STANDFREE

#endif // _LIBCPP__TIME
