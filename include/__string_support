// -*- C++ -*-
//===----------------------------------------------------------------------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is dual licensed under the MIT and the University of Illinois Open
// Source Licenses. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#ifndef _LIBCPP_STRING_SUPPORT
#define _LIBCPP_STRING_SUPPORT

#include <__config>

#ifndef _LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER
#pragma GCC system_header
#endif

#ifndef __libcpp_has_include
  #ifndef __has_include
    #define __libcpp_has_include(x) 0
  #else
    #define __libcpp_has_include(x) __has_include(x)
  #endif
#endif

#if defined(_LIBCPP_HAS_STRING_API_EXTERNAL) && \
    __libcpp_has_include(<__external_string>)
#include <__external_string>
#else

#include <string.h>

_LIBCPP_BEGIN_NAMESPACE_STD

inline _LIBCPP_INLINE_VISIBILITY
char* __libcpp_strchr(const char* __s, int __c) {return (char*)strchr(__s, __c);}

inline _LIBCPP_INLINE_VISIBILITY
char* __libcpp_strrchr(const char* __s, int __c) {return (char*)strrchr(__s, __c);}

inline _LIBCPP_INLINE_VISIBILITY
char* __libcpp_strstr(const char* __s1, const char* __s2) {return (char*)strstr(__s1, __s2);}

inline _LIBCPP_INLINE_VISIBILITY
char* __libcpp_strpbrk(const char* __s1, const char* __s2) {return (char*)strpbrk(__s1, __s2);}

inline _LIBCPP_INLINE_VISIBILITY
void* __libcpp_memchr(const void* __s, int __c, std::size_t __n) {return (void*)memchr(__s, __c, __n);}

_LIBCPP_END_NAMESPACE_STD

#endif

#endif // _LIBCPP_STRING_SUPPORT
