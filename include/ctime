// -*- C++ -*-
//===---------------------------- ctime -----------------------------------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is dual licensed under the MIT and the University of Illinois Open
// Source Licenses. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#ifndef _LIBCPP_CTIME
#define _LIBCPP_CTIME

/*
    ctime synopsis

Macros:

    NULL
    CLOCKS_PER_SEC

namespace std
{

Types:

    clock_t
    size_t
    time_t
    tm

clock_t clock();
double difftime(time_t time1, time_t time0);
time_t mktime(tm* timeptr);
time_t time(time_t* timer);
char* asctime(const tm* timeptr);
char* ctime(const time_t* timer);
tm*    gmtime(const time_t* timer);
tm* localtime(const time_t* timer);
size_t strftime(char* restrict s, size_t maxsize, const char* restrict format,
                const tm* restrict timeptr);

}  // std

*/

#include <__config>
#include <time.h>

#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
#pragma GCC system_header
#endif

_LIBCPP_BEGIN_NAMESPACE_STD

using _LIBCPP_CNAMESPACE::clock_t;
using _LIBCPP_CNAMESPACE::size_t;
using _LIBCPP_CNAMESPACE::time_t;
using _LIBCPP_CNAMESPACE::tm;
using _LIBCPP_CNAMESPACE::clock;
using _LIBCPP_CNAMESPACE::difftime;
using _LIBCPP_CNAMESPACE::mktime;
using _LIBCPP_CNAMESPACE::time;
#ifndef _LIBCPP_HAS_NO_THREAD_UNSAFE_C_FUNCTIONS
using _LIBCPP_CNAMESPACE::asctime;
using _LIBCPP_CNAMESPACE::ctime;
using _LIBCPP_CNAMESPACE::gmtime;
using _LIBCPP_CNAMESPACE::localtime;
#endif
using _LIBCPP_CNAMESPACE::strftime;

_LIBCPP_END_NAMESPACE_STD

#endif  // _LIBCPP_CTIME
